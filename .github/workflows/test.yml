name: test-ci

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: "buildx platforms"
        default: "linux/amd64,linux/arm64"
        required: true
        type: string
      nginx:
        description: "nginx version"
        default: "1.26.2"
        required: true
        type: string
      php84:
        description: "e.g: 8.4.010"
        default: ""
        type: string
      php83:
        description: "e.g: 8.3.000"
        default: ""
        type: string
      php82:
        description: "e.g: 8.2.010"
        default: ""
        type: string
      php81:
        description: "e.g: 8.1.100"
        default: ""
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nginx: ["${{ inputs.nginx }}"]
        php: ["8.4", "8.3", "8.2", "8.1"]
        include:
          - php: "8.4"
            tag: ${{ inputs.php84 }}
          - php: "8.3"
            tag: ${{ inputs.php83 }}
          - php: "8.2"
            tag: ${{ inputs.php82 }}
          - php: "8.1"
            tag: ${{ inputs.php81 }}
      fail-fast: true

    steps:
      - id: update
        name: Update image
        run: |
          echo "nginx: ${{ matrix.nginx }}"
          echo "tag: ${{ matrix.tag }}"
          if [[ -z "${{ matrix.nginx }}" ]] || [[ -z "${{ matrix.tag }}" ]]; then
            echo "no, no update"
            echo "update=no" >> $GITHUB_OUTPUT
          else
            echo "yes, update"
            echo "update=yes" >> $GITHUB_OUTPUT
          fi
      - name: Matrix => (${{ matrix.php }} - ${{ matrix.tag }})
        if: steps.update.outputs.update == 'yes'
        run: |
          echo "update: ${{steps.update.outputs.update}}"
          echo ${{ matrix.nginx }}
          echo ${{ matrix.php }}
          echo ${{ matrix.tag }}
      - name: Generate tags
        id: meta
        if: steps.update.outputs.update == 'yes'
        env:
          IMAGES: "${{ secrets.DOCKERHUB_USERNAME }}/nginx-php ghcr.io/${{ github.actor }}/nginx-php"
        run: |
          IMAGE_TAGS=''
          IFS=' ' read -ra IMAGE <<< "$IMAGES"
          for element in "${IMAGE[@]}"; do
            LAT_VER=''
            if [[ "${{ matrix.php }}" == "8.4" ]]; then
              LAT_VER="${element}:latest,"
            fi
            PRE_VER="${element}:${{ matrix.php }},"
            FUL_VER="${element}:${{ matrix.tag }},"
            IMAGE_TAG="${LAT_VER}${PRE_VER}${FUL_VER}"
            IMAGE_TAGS="${IMAGE_TAGS}${IMAGE_TAG}"
          done
          echo "IMAGE_TAGS=$IMAGE_TAGS" >> "$GITHUB_OUTPUT"
      - name: Show docker tags
        if: steps.meta.outputs.IMAGE_TAGS != ''
        run: |
          echo ${{ steps.meta.outputs.IMAGE_TAGS }}
